# TODO: Rename to pre-release workflow
name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version:'
        required: true
        type: string
      is_lts:
        description: 'LTS release'
        required: true
        type: boolean
        default: false

# TODO: remove _DANNY onces ready for testing with prod aws
env: 
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DANNY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DANNY }}
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_DANNY }}
  AWS_DEFAULT_REGION: 'eu-west-1'
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GIT_TERMINAL_PROMPT: 0
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
      BASE_32_VERSION: ${{ github.event.inputs.base32_version }}
      IS_LTS: ${{ github.event.inputs.is_lts }}
    steps:
      - uses: actions/checkout@v3
      - uses: unfor19/install-aws-cli-action@v1.0.2
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Git
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git config --global --add url."https://github.com/".insteadOf ssh://git@github.com/

      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm config set registry https://registry.npmjs.org/
          npm install

      # @TODO: Rename branch to 'release' once workflow is ready to merge
      - name: Setup env
        run: |
          clean_release_version=$(echo $RELEASE_VERSION | sed -e 's/-.*//g')
          echo "RELEASE_BRANCH_NAME=poc-release/$clean_release_version" >> $GITHUB_ENV

      - name: Validate Input
        run: node release/validateInput.js

      - name: Checkout & Pull
        run: node release/checkoutReleaseBranch.js

      # TODO: Wait for new token from devOps
      - name: Setup base32
        run: node release/base32.js

      - name: Add base32 to env
        run: |
          source ./release/githubActions/workflows.config
          echo "BASE_32_VERSION=${BASE_32_VERSION}" >> $GITHUB_ENV

      - name: Update CHANGELOG.md
        run: node release/updateChangeLog.js

      - name: Update files
        run: node release/updateReleaseFiles.js

      - name: Format
        run: npm run format

      # - name: Build
      #   run: npm run build:all

      - name: Remote branch exists
        run: |
          if [[ $(git branch --all --list $RELEASE_BRANCH_NAME) ]] 
          then
            echo "REMOTE_BRANCH_EXIST=true >> $GITHUB_ENV"
          fi

      - name: Make release commit & push
        run: |
          git add .
          git commit -m "Bumping version to ${RELEASE_VERSION} "
          git push origin $RELEASE_BRANCH_NAME

      - name: Create Pull Request
        if: ${{ env.REMOTE_BRANCH_EXIST != true }}
        uses: actions/github-script@v6
        with:
          script: |
            require('./release/createPullRequest.js')(github, context)